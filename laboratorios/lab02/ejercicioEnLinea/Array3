public class Array3
{
    public int maxSpan(int[] nums) {
        if(nums.length >0){
            int max = 1;
            for(int i = 0; i < nums.length; i++){
                for(int j=nums.length-1; j > i; j--){
                    if(nums[i] == nums[j]){
                        int cont = j-i+1;
                        if(cont > max) max = cont;
                        break;
                    }
                }
            }
            return max;
        } else return 0;
    }

    public int[] fix34(int[] nums) {
        for(int i = 0; i < nums.length-1; i++){
            if(nums[i] == 3){
                int x = nums[i+1];
                nums[i+1]=4;
                for(int j = i+2; j < nums.length; j++){
                    if(nums[j]==4){
                        nums[j]=x;
                    }
                }
            }
        }
        return nums;
    }

    public int[] fix45(int[] nums) {
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == 5 && i==0 || nums[i] == 5 && nums[i-1] != 4){
                for(int j = 0; j < nums.length; j++){
                    if(nums[j]==4 && nums[j+1]!=5){
                        int x = nums[j+1];
                        nums[j+1]=nums[i];
                        nums[i]=x;
                        break;
                    }
                }
            }
        }
        return nums;
    }
}

public boolean canBalance(int[] nums) {
int lSum = 0;
  for (int i = 0; i < nums.length; i++) {
    lSum += nums[i];
    int rSum = 0;
    for (int j = nums.length-1; j > i; j--) {
      rSum += nums[j];
    }
    if (rSum == lSum)
      return true;
  }
  return false;
}


public int maxMirror(int[] nums) {
  int max = 0;
  for(int x = 0; x < nums.length; x++) {
  int cont = 0;
  for(int y = nums.length - 1; y >= 0 && x + cont < nums.length; y--) {
    if(nums[x + cont] == nums[y]) {
    cont++;}
    else {
    max = Math.max(max, cont);
    cont = 0;
  }
}
   max = Math.max(max, cont);
 }

 return max;
}
