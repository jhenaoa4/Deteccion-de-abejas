public class ArrayList
{
    private int size;
    private static final int DEFAULT_CAPACITY = 10;
    private int elements[]; 

    /**
     * El metodo constructor se utiliza para incializar
     * variables a valores neutros como 0 o null.
     * El contructor no lleva parámetros en este caso.
     */
    public ArrayList() {
        elements = new int[DEFAULT_CAPACITY];
        size =0;
    }     

    /**
     * Tiene la intención de retornar la longitud del objeto
     * @return longitud del objeto
     *
     * El size esta influenciado por las funciones add y del
     */
    public int size() {
        return elements.length;
    }   

    /** 
     * @param e el elemento a guardar
     * Agrega un elemento e a la última posición de la lista
     *
     */
    public void add(int e) {
        for(int i = 0; i <= elements.length; i++){
            if (i == elements.length-1){
                int [] temp  = elements;
                elements = new int[DEFAULT_CAPACITY*2];
                for(int j = 0; j < DEFAULT_CAPACITY; j++){
                    elements[j] = temp[j];
                }
            }
                if(elements[i] == 0){
                    elements[i] = e;
                    size++;
                    break;
                
            }
        }
    }    

    /** 
     * @param i es un íncide donde se encuentra el elemento posicionado
     * Retorna el elemento que se encuentra en la posición i de la lista.
     *
     */
    public int get(int i) {
        return elements[i];
    }

    /**
     * @param index es la posicion en la cual se va agregar el elemento
     * @param e el elemento a guardar
     * Agrega un elemento e en la posición index de la lista
     *
     */
    public void add(int index, int e) {
        size++;
        for(int i = index; i< elements.length; i++){
            if (i == elements.length-1){
                int [] temp  = elements;
                elements = new int[DEFAULT_CAPACITY*2];
                for(int j = 0; j < DEFAULT_CAPACITY; j++){
                    elements[j] = temp[j];
                }
            } 
            if(elements[i] == 0){
               break;
            } else {
                int temp = elements[i];
                elements[index] = e;
                elements[i] = temp;
            }
        }
    } 

    /**
     * @param index es la posicion en la cual se va agregar el elemento
     *
     * ELimina el elemento  en la posición index de la lista
     *
     */
    public void del(int index){
        size--;
        elements[index] = 0;
        for(int i = index; i < elements.length-1; i++){
            elements[i] = elements[i+1];
        }
    }
}
